>>> import pandas as pd
>>> import matplotlib.pyplot as plt
>>> from sklearn.ensemble import RandomForestClassifier
>>> from sklearn.model_selection import train_test_split
>>> from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
>>> from sklearn.preprocessing import LabelEncoder
>>> import seaborn as sns
>>> file_path = r'C:\Users\PMLS\Desktop\hvac_simulation_results_realtime_flowrate.csv'
>>> df = pd.read_csv(file_path)
>>> def classify_duct(row):
...     if row['Efficiency'] > 90 and row['Pressure_Loss'] < 10:
...         return 'Sealed'
...     elif row['Efficiency'] > 70 and row['Pressure_Loss'] < 30:
...         return 'Minor Leakage'
...     else:
...         return 'Major Leakage'
...
>>> df['Duct_Classification'] = df.apply(classify_duct, axis=1)
>>> label_encoder = LabelEncoder()
>>> df['Label'] = label_encoder.fit_transform(df['Duct_Classification'])
>>> X = df[['Pressure_Loss', 'Efficiency']]
>>> y = df['Label']
>>>
>>> X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
>>> clf = RandomForestClassifier(random_state=42)
>>> clf.fit(X_train, y_train)
RandomForestClassifier(random_state=42)
>>> y_pred = clf.predict(X_test)
>>> accuracy = accuracy_score(y_test, y_pred)
>>> print(f"Accuracy: {accuracy * 100:.2f}%\n")
Accuracy: 100.00%
present_labels = sorted(unique(y_test.tolist() + y_pred.tolist()))
>>> print(classification_report(
...     y_test, y_pred,
...         labels=present_labels,
...             target_names=label_encoder.inverse_transform(present_labels)
...
...
... ))
               precision    recall  f1-score   support

Major Leakage       1.00      1.00      1.00         6
       Sealed       1.00      1.00      1.00        14

     accuracy                           1.00        20
    macro avg       1.00      1.00      1.00        20
 weighted avg       1.00      1.00      1.00        20
